server:
  port: 8080

spring:
  application:
    name: ai-portfolio-backend
  
  
  # PostgreSQL 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ai_portfolio}
    username: ${DB_USER:dev_user}
    password: ${DB_PASSWORD:dev_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # Redis 캐싱 설정
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    ssl: ${REDIS_SSL:false}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # 캐시 설정
  cache:
    type: redis
    redis:
      time-to-live: 86400000  # 1일 (밀리초)

  # 웹 설정 (CORS만 - 정적 파일 서빙 제거)
  web:
    cors:
      allowed-origins: 
        - "http://localhost:3000"
        - "http://localhost:5173"
        - "http://127.0.0.1:5173"
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# 로깅 설정
logging:
  level:
    com.aiportfolio.backend: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# 환경변수 설정
app:
  ai-service:
    url: ${AI_SERVICE_URL:http://localhost:8000}
    timeout: ${AI_SERVICE_TIMEOUT:30000}
  github:
    username: Yamang02
  contact:
    email: ljj0210@gmail.com
  security:
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
    rate-limit:
      window: ${RATE_LIMIT_WINDOW:60000}
      max-requests: ${RATE_LIMIT_MAX_REQUESTS:100} 