server:
  port: 8080

spring:
  application:
    name: ai-portfolio-backend
  
  # Railway PostgreSQL 설정 (Production)
  datasource:
    url: ${DATABASE_URL}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate  # 프로덕션에서는 validate만 사용
    show-sql: false      # 프로덕션에서는 SQL 로그 비활성화
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  
  # CORS 설정 (프로덕션 도메인)
  web:
    cors:
      allowed-origins: 
        - "https://ai-portfolio-chatbot-493721639129.asia-northeast3.run.app"
        - "https://your-production-domain.com"  # 실제 프로덕션 도메인
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# Swagger 비활성화 (프로덕션)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# 로깅 설정 (프로덕션 레벨)
logging:
  level:
    com.aiportfolio.backend: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%level] %logger{36} - %msg%n"

# 환경변수 설정 (기존 패턴 유지)
app:
  gemini:
    api-key: ${GEMINI_API_KEY}
    model-name: gemini-2.5-flash
  github:
    username: Yamang02  # 하드코딩
  contact:
    email: ljj0210@gmail.com  # 하드코딩
  security:
    rate-limit:
      window: 60000
      max-requests: 30  # 프로덕션에서는 더 제한적