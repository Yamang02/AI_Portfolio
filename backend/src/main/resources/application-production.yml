# Production environment (Railway + Cloud Run)
spring:
  # Railway PostgreSQL Configuration (URL 변환 처리)
  datasource:
    url: ${POSTGRE_URL:jdbc:postgresql://localhost:5432/ai_portfolio}  # Railway PostgreSQL URL 우선 사용
    username: ${POSTGRES_USER:dev_user}
    password: ${POSTGRES_PASSWORD:dev_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5  # Cloud Run 메모리 제한 고려
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration for Production  
  jpa:
    hibernate:
      ddl-auto: none  # 운영환경에서는 스키마 변경 금지
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  # Redis 캐싱 설정
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
    database: ${REDIS_DATABASE}
    ssl: ${REDIS_SSL}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # 캐시 설정
  cache:
    type: redis
    redis:
      time-to-live: 86400000  # 1일 (밀리초)

  # CORS 설정 (프로덕션 도메인)
  web:
    cors:
      allowed-origins: 
        - "https://yamang02.com"
        - "https://www.yamang02.com"
      allowed-methods: 
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# Actuator for Cloud Run health checks
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never
  health:
    redis:
      enabled: false  # Redis 헬스체크 비활성화

# Production logging
logging:
  level:
    com.aiportfolio.backend: INFO
    org.springframework.web: WARN

# Server configuration
server:
  port: ${PORT:8080}  # Cloud Run에서 제공하는 PORT 사용

# 앱 설정
app:
  gemini:
    api-key: ${GEMINI_API_KEY}
    model-name: gemini-2.5-flash
  github:
    username: Yamang02
  contact:
    email: ljj0210@gmail.com
  security:
    rate-limit:
      window: 60000
      max-requests: 100  # 프로덕션에서는 더 관대하게